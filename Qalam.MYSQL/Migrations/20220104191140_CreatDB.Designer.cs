// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Qalam.MYSQL.Context;

namespace Qalam.MYSQL.Migrations
{
    [DbContext(typeof(QalamDBContext))]
    [Migration("20220104191140_CreatDB")]
    partial class CreatDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Qalam.MYSQL.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "جنيه",
                            Name = "مصر"
                        },
                        new
                        {
                            Id = 2,
                            Currency = "ريال",
                            Name = "عمان"
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EducationYearId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("EducationYearId", "SubjectId")
                        .IsUnique();

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EducationYearId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            EducationYearId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            EducationYearId = 1,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 4,
                            EducationYearId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 5,
                            EducationYearId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 6,
                            EducationYearId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 7,
                            EducationYearId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 8,
                            EducationYearId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 9,
                            EducationYearId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 10,
                            EducationYearId = 4,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 11,
                            EducationYearId = 4,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 12,
                            EducationYearId = 4,
                            SubjectId = 3
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.DataFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DataFiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "livePackage_",
                            FilePath = "",
                            Type = 0,
                            UploadDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            FileName = "examPackage",
                            FilePath = "",
                            Type = 0,
                            UploadDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            FileName = "allPackage",
                            FilePath = "",
                            Type = 0,
                            UploadDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.EducationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("EducationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "التعليم العام"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "التعليم الأزهري"
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.EducationYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("EducationYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "الصف الأول الإبتدائي"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "الصف الثاني الإبتدائي"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "الصف الثالث الإبتدائي"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "الصف الرابع الإبتدائي"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            Name = "الصف الخامس الإبتدائي"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "الصف السادس الإبتدائي"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Name = "الصف الأول الإعدادي"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "الصف الثاني الإعدادي"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "الصف الثالث الإعدادي"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            Name = "الصف الأول الثانوي"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 1,
                            Name = "الصف الثاني الثانوي"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 1,
                            Name = "الصف الثالث الثانوي"
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("SetterId")
                        .HasColumnType("int");

                    b.Property<int?>("StartTime")
                        .HasColumnType("int");

                    b.Property<int>("TimeInMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SetterId");

                    b.HasIndex("VideoId")
                        .IsUnique();

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.ExamQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ExamId", "QuestionId")
                        .IsUnique();

                    b.ToTable("ExamQuestions");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.ExcludedContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("EducationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LessonId");

                    b.ToTable("ExcludedContents");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsRTL")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "ar",
                            IsRTL = true,
                            Name = "اللغة العربية"
                        },
                        new
                        {
                            Id = 2,
                            Code = "en",
                            IsRTL = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = 3,
                            Code = "fr",
                            IsRTL = false,
                            Name = "French"
                        },
                        new
                        {
                            Id = 4,
                            Code = "it",
                            IsRTL = false,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 5,
                            Code = "de",
                            IsRTL = false,
                            Name = "German"
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("int");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "أسره سعيدة",
                            SemesterNumber = 1,
                            UnitNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Name = "مدرستي جميلة",
                            SemesterNumber = 1,
                            UnitNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            Name = "نشيد أمي",
                            SemesterNumber = 1,
                            UnitNumber = 3
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.LiveStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFree")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("TimetableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TimetableId");

                    b.HasIndex("TeacherId", "CourseId");

                    b.ToTable("LiveStreams");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PeriodInDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#789e5f",
                            ImageId = 1,
                            IsActive = false,
                            IsVisible = false,
                            Name = "باقة قلم مباشر",
                            PeriodInDays = 30
                        },
                        new
                        {
                            Id = 2,
                            Color = "#7030a0",
                            ImageId = 2,
                            IsActive = false,
                            IsVisible = false,
                            Name = "باقة الإمتحانات",
                            PeriodInDays = 30
                        },
                        new
                        {
                            Id = 3,
                            Color = "#00b0f0",
                            ImageId = 3,
                            IsActive = false,
                            IsVisible = false,
                            Name = "الباقة الحرة",
                            PeriodInDays = 30
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.PackageItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("HasOffer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumberOfExams")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVideos")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PackageId");

                    b.ToTable("PackageItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "4 حصص مباشر",
                            NumberOfExams = 0,
                            NumberOfVideos = 4,
                            PackageId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "8 حصص مباشر",
                            NumberOfExams = 0,
                            NumberOfVideos = 8,
                            PackageId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "28 حصه مباشر",
                            NumberOfExams = 0,
                            NumberOfVideos = 28,
                            PackageId = 1
                        },
                        new
                        {
                            Id = 4,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "20 امتحان لأي مادة",
                            NumberOfExams = 20,
                            NumberOfVideos = 0,
                            PackageId = 2
                        },
                        new
                        {
                            Id = 5,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "40 امتحان لأي مادة",
                            NumberOfExams = 40,
                            NumberOfVideos = 0,
                            PackageId = 2
                        },
                        new
                        {
                            Id = 6,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "65 امتحان لأي مادة",
                            NumberOfExams = 65,
                            NumberOfVideos = 0,
                            PackageId = 2
                        },
                        new
                        {
                            Id = 7,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "5 حصص مباشر - 30 امتحان",
                            NumberOfExams = 30,
                            NumberOfVideos = 5,
                            PackageId = 3
                        },
                        new
                        {
                            Id = 8,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasOffer = false,
                            IsActive = false,
                            IsVisible = false,
                            Name = "10 حصص مباشر - 60 امتحان",
                            NumberOfExams = 60,
                            NumberOfVideos = 10,
                            PackageId = 3
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.PackageOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumberOfExams")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVideos")
                        .HasColumnType("int");

                    b.Property<int>("PackageItemId")
                        .HasColumnType("int");

                    b.Property<int>("PriceInDollar")
                        .HasColumnType("int");

                    b.Property<int?>("PriceInPoint")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageItemId");

                    b.ToTable("PackageOffers");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.PackagePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("PackageItemId")
                        .HasColumnType("int");

                    b.Property<double>("PriceInMoney")
                        .HasColumnType("double");

                    b.Property<double?>("PriceInPoint")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PackageItemId");

                    b.ToTable("PackagePrices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            PackageItemId = 1,
                            PriceInMoney = 60.0
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            PackageItemId = 2,
                            PriceInMoney = 80.0
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            PackageItemId = 3,
                            PriceInMoney = 100.0
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            PackageItemId = 4,
                            PriceInMoney = 40.0
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            PackageItemId = 5,
                            PriceInMoney = 50.0
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            PackageItemId = 6,
                            PriceInMoney = 60.0
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            PackageItemId = 7,
                            PriceInMoney = 50.0
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            PackageItemId = 8,
                            PriceInMoney = 80.0
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("SetterId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("SetterId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.QuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAnswers");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EducationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EducationYearId")
                        .HasColumnType("int");

                    b.Property<string>("ParentPhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("ReferalById")
                        .HasColumnType("int");

                    b.Property<string>("Referalcode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationTypeId");

                    b.HasIndex("EducationYearId");

                    b.HasIndex("ReferalById");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.StudentExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Dgree")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("double");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId", "ExamId")
                        .IsUnique();

                    b.ToTable("StudentExams");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.StudentPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExamCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PackageItemId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscribeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VideoCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageItemId");

                    b.HasIndex("StudentId", "PackageItemId");

                    b.ToTable("StudentPackages");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.StudentVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LiveStreamId")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("double");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ViewDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LiveStreamId");

                    b.HasIndex("StudentId", "LiveStreamId")
                        .IsUnique();

                    b.ToTable("StudentVideos");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            LanguageId = 1,
                            Name = "اللغة العربية"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            LanguageId = 1,
                            Name = "الرياضيات"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            LanguageId = 2,
                            Name = "English"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            LanguageId = 1,
                            Name = "العلوم"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            LanguageId = 1,
                            Name = "الدراسات الإجتماعية"
                        });
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StreamKey")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.TeacherCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("CourseId", "TeacherId")
                        .IsUnique();

                    b.ToTable("TeacherCourses");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.TeacherFollow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FollowingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId", "StudentId")
                        .IsUnique();

                    b.ToTable("TeacherFollowers");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.TeacherTimetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time(6)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("TimetableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TimetableId");

                    b.ToTable("TeacherTimetables");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Timetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("About")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Facebook")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("NormalizedEmail")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Course", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.EducationYear", "EducationYear")
                        .WithMany("Courses")
                        .HasForeignKey("EducationYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Subject", "Subject")
                        .WithMany("Courses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.DataFile", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.User", "User")
                        .WithMany("Files")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.EducationType", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Country", "Country")
                        .WithMany("EducationTypes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.EducationYear", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Country", "Country")
                        .WithMany("EducationYears")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Exam", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Course", "Course")
                        .WithMany("Exams")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Teacher", "Setter")
                        .WithMany("Exams")
                        .HasForeignKey("SetterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Qalam.MYSQL.Entities.LiveStream", "Video")
                        .WithOne("Exam")
                        .HasForeignKey("Qalam.MYSQL.Entities.Exam", "VideoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.ExamQuestion", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Question", "Question")
                        .WithMany("Exams")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.ExcludedContent", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Course", "Course")
                        .WithMany("ExcludedContents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Qalam.MYSQL.Entities.EducationType", "EducationType")
                        .WithMany("ExcludedContents")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Qalam.MYSQL.Entities.Lesson", "Lesson")
                        .WithMany("ExcludedContents")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Lesson", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.LiveStream", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Course", "Course")
                        .WithMany("Videos")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Teacher", "Teacher")
                        .WithMany("Videos")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.TeacherTimetable", "Timetable")
                        .WithMany("Videos")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Notification", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.User", "Receiver")
                        .WithMany("ReceivedNotifications")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.User", "Sender")
                        .WithMany("SentNotifications")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Package", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.DataFile", "Image")
                        .WithMany("Packages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.PackageItem", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Package", "Package")
                        .WithMany("Items")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.PackageOffer", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.PackageItem", "PackageItem")
                        .WithMany("Offers")
                        .HasForeignKey("PackageItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.PackagePrice", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Country", "Country")
                        .WithMany("PackagePrices")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.PackageItem", "PackageItem")
                        .WithMany("Prices")
                        .HasForeignKey("PackageItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Question", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Lesson", "Lesson")
                        .WithMany("Questions")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.User", "Setter")
                        .WithMany()
                        .HasForeignKey("SetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.QuestionAnswer", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Student", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.EducationType", "EducationType")
                        .WithMany("Students")
                        .HasForeignKey("EducationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.EducationYear", "EducationYear")
                        .WithMany("Students")
                        .HasForeignKey("EducationYearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Student", "ReferalByStudent")
                        .WithMany("InverseReferredBy")
                        .HasForeignKey("ReferalById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Qalam.MYSQL.Entities.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Qalam.MYSQL.Entities.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.StudentExam", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Exam", "Exam")
                        .WithMany("Students")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Student", "Student")
                        .WithMany("Exams")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.StudentPackage", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.PackageItem", "PackageItem")
                        .WithMany("Students")
                        .HasForeignKey("PackageItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Student", "Student")
                        .WithMany("Packages")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.StudentVideo", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.LiveStream", "LiveStream")
                        .WithMany("Students")
                        .HasForeignKey("LiveStreamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Student", "Student")
                        .WithMany("Videos")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Subject", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Country", "Country")
                        .WithMany("Subjects")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Language", "Language")
                        .WithMany("Subjects")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Teacher", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Subject", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("Qalam.MYSQL.Entities.Teacher", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.TeacherCourse", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Course", "Course")
                        .WithMany("Teachers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.TeacherFollow", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Student", "Student")
                        .WithMany("FollowingTeachers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Teacher", "Teacher")
                        .WithMany("Followers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.TeacherTimetable", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Teacher", "Teacher")
                        .WithMany("Timetables")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Timetable", "Timetable")
                        .WithMany("Teachers")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.Timetable", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Course", "Course")
                        .WithMany("Timetable")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Qalam.MYSQL.Entities.User", b =>
                {
                    b.HasOne("Qalam.MYSQL.Entities.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qalam.MYSQL.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
